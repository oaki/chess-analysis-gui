{"version":3,"sources":["webpack:///./components/historyList/move.tsx","webpack:///./components/historyList/listItem.tsx","webpack:///./tools/formatDate.tsx","webpack:///./components/historyList/smartHistoryList.tsx","webpack:///./layouts/historyPage.tsx"],"names":["Move","move","index","MoveNumber","shortNotation","num","Math","round","className","ListItem","date","historyGame","handleLoadGame","handleDeleteGame","key","id","swipeRight","content","icon","action","onClick","updated_at","format","parseISO","moves","map","HistoryList","props","useFetch","fetchState","doFetch","response","loadHistoryGames","Items","config","apiHost","method","headers","Headers","getToken","historyList","history","e","preventDefault","Number","currentTarget","dataset","historyGameResponse","find","item","user","store","getState","dispatch","push","SmartHistoryList","state","HistoryPage","Header","title","showMainMenu","token","url","fetch","ok","Error","json","games","console","log","error","msg","identifier"],"mappings":"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","file":"6.d7a66b76bf30d3f23c60.js","sourcesContent":["import {NODE_MAP} from \"../moveTree/tree\";\nimport React, {memo} from \"react\";\nimport {IHistoryMove} from \"../history/historyReducers\";\n\nexport const Move = memo(({move, index}: MoveProps) => {\n    return (\n        <span><MoveNumber index={index}/> {move[NODE_MAP.shortNotation]} </span>\n    );\n});\n\nexport const MoveNumber = memo(({index}: MoveNumberProps) => {\n    const tmp = index % 2;\n\n    if (tmp === 1) {\n        return null;\n    }\n\n    const num = Math.round(index / 2) + 1;\n    return (\n        <span className=\"fs-xs\">{num}. </span>\n    )\n});\n\ninterface MoveProps {\n    move: IHistoryMove;\n    index: number;\n}\n\ninterface MoveNumberProps {\n    index: number;\n}","import {default as React, memo} from \"react\";\nimport {faArrowRight, faTrash} from \"@fortawesome/fontawesome-free-solid\";\nimport {formatDate} from \"../../tools/formatDate\";\nimport {SwipeableListItem} from \"@sandstreamdev/react-swipeable-list\";\nimport {IHistoryGameResponse} from \"./historyListReducers\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport {IHistoryMove} from \"../history/historyReducers\";\nimport {Move} from \"./move\";\n\n\nexport const ListItem = memo(({historyGame, handleLoadGame, handleDeleteGame}: ListItemProps) => {\n    return (\n        <SwipeableListItem\n            key={historyGame.id}\n            swipeRight={{\n                content: <div className={\"c-white pl-sm\"}><FontAwesomeIcon icon={faTrash}/> Delete</div>,\n                action: () => handleDeleteGame(historyGame.id)\n            }}\n        >\n            <div key={historyGame.id}\n                 onClick={handleLoadGame}\n                 data-id={historyGame.id}>\n                <div className=\"d-b p-sm cur-p\">\n                    <span className=\"c-white f-r\"><FontAwesomeIcon icon={faArrowRight}/></span>\n\n                    <div className=\"fs-xs\">{formatDate(historyGame.updated_at)}</div>\n                    <div className=\"ox-a fs-xs\">\n                        {historyGame.moves.map((move: IHistoryMove, index) => <Move move={move} index={index}/>)}\n                    </div>\n                </div>\n            </div>\n\n        </SwipeableListItem>\n    )\n});\n\ninterface ListItemProps {\n    historyGame: IHistoryGameResponse;\n    handleLoadGame: (e: any) => void;\n    handleDeleteGame: (id: number) => void;\n}\n","import format from \"date-fns/format\";\nimport parseISO from \"date-fns/parseISO\";\n\nexport function formatDate(date: string) {\n    return format(parseISO(date), \"dd.MM.yyyy\");\n}","import store from \"../../store\";\nimport React, {memo, ReactElement, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {batchActions} from \"redux-batched-actions\";\nimport {setEvaluation, setPosition, setUser} from \"../../actions\";\nimport {setSyzygyEvaluation} from \"../syzygyExplorer/syzygyExplorerReducers\";\nimport {lastMoveId, setHistory} from \"../history/historyReducers\";\nimport {setOpeningPosition} from \"../openingExplorer/openingExplorerReducers\";\nimport {FIRST_ID} from \"../moveTree/tree\";\nimport {IHistoryGameResponse} from \"./historyListReducers\";\nimport {SwipeableList} from \"@sandstreamdev/react-swipeable-list\";\nimport \"./style.scss\";\nimport {Undef} from \"../../interfaces\";\nimport {ListItem} from \"./listItem\";\nimport {useFetch} from \"../hooks/useFetch\";\nimport {SessionManagerService} from \"../../services/sessionManager\";\nimport config from \"../../config\";\nimport {loadHistoryGames} from \"../../layouts/historyPage\";\n\n\ninterface HistoryListProps {\n    historyList: IHistoryGameResponse[];\n    history: any;\n}\n\nconst HistoryList = memo((props: HistoryListProps) => {\n    const [fetchState, doFetch] = useFetch();\n\n    useEffect(() => {\n        if (fetchState.response) {\n            loadHistoryGames();\n        }\n    }, [doFetch, fetchState.response]);\n\n\n    const handleDeleteGame = (id: number) => doFetch(`${config.apiHost}/user/history/${id}`, {\n        method: \"DELETE\",\n        headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${SessionManagerService.getToken()}`\n        })\n    });\n\n    return (\n        <SwipeableList>\n            <Items handleDeleteGame={handleDeleteGame} historyList={props.historyList} history={props.history}/>\n        </SwipeableList>\n    )\n});\n\ninterface ItemsProps {\n    history: any;\n    historyList: IHistoryGameResponse[];\n    handleDeleteGame: (id: number) => void;\n}\n\nconst Items = memo((props: ItemsProps) => {\n    const handleLoadGame = (e: any) => {\n        e.preventDefault();\n        const id: number = Number(e.currentTarget.dataset.id);\n        const historyGameResponse: Undef<IHistoryGameResponse> = props.historyList.find((item: IHistoryGameResponse) => {\n            return Number(item.id) === id;\n        });\n\n        if (historyGameResponse) {\n            const user = store.getState()[\"user\"];\n            store.dispatch(batchActions([\n                setUser(user),\n                setHistory(historyGameResponse.moves),\n                lastMoveId(FIRST_ID),\n                setPosition(\"\"),\n                setOpeningPosition([]),\n                setEvaluation([]),\n                setSyzygyEvaluation(null),\n            ]));\n        }\n        props.history.push(\"/\");\n    };\n\n    return (\n        <>\n            {props.historyList.map((historyGame: IHistoryGameResponse, index): ReactElement =>\n                <ListItem\n                    key={historyGame.id}\n                    historyGame={historyGame}\n                    handleLoadGame={handleLoadGame}\n                    handleDeleteGame={props.handleDeleteGame}\n                />)}\n        </>\n    )\n});\n\nconst mapStateToProps = (state) => ({historyList: state.historyList});\nexport const SmartHistoryList = connect(mapStateToProps)(HistoryList);\n","import React, {FC, memo, useEffect} from \"react\";\nimport {MenuWithRouter} from \"../components/menu/menu\";\nimport {setLoading} from \"../actions\";\nimport store from \"../store\";\nimport config from \"../config\";\nimport {Header} from \"../components/Header\";\nimport {SmartHistoryList} from \"../components/historyList/smartHistoryList\";\nimport {setHistoryGameList} from \"../components/historyList/historyListReducers\";\nimport {Flash} from \"../services/errorManager\";\nimport {SessionManagerService} from \"../services/sessionManager\";\n\nexport const HistoryPage: FC<HistoryPageProps> = memo(({history}) => {\n\n    useEffect(() => {\n        loadHistoryGames();\n    }, [])\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <Header title=\"History\"/>\n\n                    <div className=\"row bg-mine-shaft1\">\n                        <div className=\"col-md-12\">\n                            <SmartHistoryList history={history}/>\n                        </div>\n                    </div>\n\n                </div>\n\n                <MenuWithRouter showMainMenu={true}/>\n            </div>\n        </div>\n    );\n});\n\nexport async function loadHistoryGames() {\n    const token = SessionManagerService.getToken();\n    store.dispatch(setLoading(true));\n\n    const url = `${config.apiHost}/user/history?offset=${Number(0)}&limit=${Number(10)}&order=DESC`;\n    const headers: RequestInit = {\n        method: \"GET\",\n        headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }),\n    };\n\n    try {\n        const response = await fetch(url, headers);\n        if (!response.ok) {\n            throw new Error(\"Loading failed\");\n        }\n\n        const games: any = await response.json();\n        console.log(games);\n        store.dispatch(setHistoryGameList(games));\n\n    } catch (e) {\n        Flash.error({msg: \"Fetching history failed\", identifier: \"history\"});\n        store.dispatch(setLoading(false));\n    }\n\n    store.dispatch(setLoading(false));\n}\n\nexport default HistoryPage;\n\nexport type HistoryPageProps = {\n    history: any;\n}\n"],"sourceRoot":""}